{
    "collab_server" : "",
    "contents" : "library(\"gdata\")\nlibrary(\"biomaRt\")\nlibrary(\"GenomicRanges\")\nlibrary(\"rtracklayer\")\nlibrary(\"BSgenome.Hsapiens.UCSC.hg19\")\nlibrary(\"AnnotationDbi\")\nlibrary(\"GenomicFeatures\")\n\n\n# load list of cancer testis antigens -------------------------------------\npath <- \"~\"\ncta <- read.xls(paste(path, \"/Data/Tremethick/Hodgkins-Lymphoma/Cancer-specific testis antigens.xlsx\", sep = \"\"))\ncolnames(cta)[c(4,3)] <- colnames(cta)[c(3,2)]\ncolnames(cta)[2] <- \"gene_symbol\"\n\n# set up biomaRT connection -----------------------------------------------\n# using hg19\nhsap <- useEnsembl(biomart = \"ensembl\", dataset = \"hsapiens_gene_ensembl\", host = \"grch37.ensembl.org\")\nhsap.attribs <- listAttributes(hsap)\nhsapEnsemblTxDB <- makeTxDbFromBiomart(biomart=\"ENSEMBL_MART_ENSEMBL\",\n                                       dataset=\"hsapiens_gene_ensembl\",\n                                       transcript_ids=NULL,\n                                       circ_seqs=DEFAULT_CIRC_SEQS,\n                                       filters=\"\",\n                                       id_prefix=\"ensembl_\",\n                                       host=\"grch37.ensembl.org\",\n                                       port=80,\n                                       taxonomyId=NA,\n                                       miRBaseBuild=NA)\nsaveDb(hsapEnsemblTxDB, file = \"~/mount/gduserv/Data/Annotations/hg19/Ensembl/hsapEnsemblTxDb.DB\")\n\n# only keep canonical chromosomes\ntoDrop <- c(\"HG\", \"GL\", \"LRG\", \"HS\")\nmatches <- grep(paste(toDrop, collapse = \"|\"), seqlevels(hsapEnsemblTxDB))\nseqlevels(hsapEnsemblTxDB, force = TRUE) <- seqlevels(hsapEnsemblTxDB)[-matches]\n\ngr.tx <- transcripts(hsapEnsemblTxDB)\ngr.genes <- genes(hsapEnsemblTxDB)\n\n# get ensembl gene IDs and locations --------------------------------------\ngenome <- BSgenome.Hsapiens.UCSC.hg19\nseqlevels(genome) <- gsub(\"chr\", \"\", seqlevels(genome))\n\ncta.gene_ids <- getBM(attributes = c(\"ensembl_gene_id\", \n                                     \"hgnc_symbol\",\n                                     \"chromosome_name\",\n                                     \"start_position\",\n                                     \"end_position\",\n                                     \"strand\"),\n                                     #\"transcription_start_site\"),\n                      filters = \"hgnc_symbol\",\n                      values = cta$gene_symbol, \n                      mart = hsap)\n\ncta.transcript_ids <- getBM(attributes = c(\"ensembl_transcript_id\", \n                                     \"hgnc_symbol\",\n                                     \"chromosome_name\",\n                                     \"start_position\",\n                                     \"end_position\",\n                                     \"strand\"),\n                      #\"transcription_start_site\"),\n                      filters = \"hgnc_symbol\",\n                      values = cta$gene_symbol, \n                      mart = hsap)\nsave(cta.transcript_ids, file = \"cta.transcript_ids.rda\")\n\ngr.cta.genes <- GRanges(seqnames = cta.gene_ids$chromosome_name,\n                        IRanges(cta.gene_ids$start_position, cta.gene_ids$end_position),\n                        strand = c(\"+\", \"-\")[match(cta.gene_ids$strand, c(1, -1))],\n                        ensembl_gene_id = cta.gene_ids$ensembl_gene_id,\n                        hgnc_symbol = cta.gene_ids$hgnc_symbol)\n# drop \"Patch\" and other non-canonical chromosomes\ntoDrop <- c(\"HG\", \"GL\", \"LRG\", \"HS\")\nmatches <- grep(paste(toDrop, collapse = \"|\"), seqlevels(gr.cta.genes))\nseqlevels(gr.cta.genes, force = T) <- seqlevels(gr.cta.genes)[-matches]\nseqlevels(gr.cta.genes) <- seqlevels(genome)\ngr.cta.genes <- sort(gr.cta.genes)\n\ndf <- data.frame(seqnames = seqnames(gr.cta.genes),\n                 starts = start(gr.cta.genes) -1,\n                 ends = end(gr.cta.genes),\n                 names = gr.cta.genes$hgnc_symbol,\n                 scores = \".\",\n                 strand = strand(gr.cta.genes))\nwrite.table(df, file = \"/Volumes/gduserv/Data/Tremethick/Hodgkins-Lymphoma/deepTools/regionFiles/ctaGenes.bed\", quote = F, sep = \"\\t\", row.names = F, col.names = F)\n\n# export(gr.cta.genes, \"/Volumes/gduserv/Data/Tremethick/Hodgkins-Lymphoma/cta_genes.bed\", \"BED\")\n# summary(width(gr.cta.genes))\n\n#\nload(\"~/mount/gduserv/Data/Annotations/hg19/grl.exon_intron\")\n",
    "created" : 1460613453920.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1913654676",
    "id" : "E79CCE90",
    "lastKnownWriteTime" : 1460547291,
    "last_content_update" : 1460547291,
    "path" : "~/OneDrive/Development/JCSMR-Tremethick-Lab/Hodgkins-Lymphoma/R/prepare_CTA_annotation.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}