setwd("~/Data/Tremethick/TALENs/NB501086_0047_TSoboleva_JCSMR_stranded_RNASeq/R_analysis")
require(rhdf5)
require(sleuth)
require(biomaRt)
source("~/Development/GeneralPurpose/R/heatmap.3.R")
base_dir <- "~/Data/Tremethick/TALENs/NB501086_0047_TSoboleva_JCSMR_stranded_RNASeq/processed_data"
sample_id <- dir(base_dir)
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, id))
kal_dirs
s2c <- data.frame(sample = sample_id, condition = c("KO", "WT", "WT", "KO", "WT", "KO"))
s2c <- dplyr::mutate(s2c, path = kal_dirs)
s2c
so <- sleuth_prep(s2c, ~ condition)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "KO")
so <- sleuth_wt(so, "conditionsKO")
so <- sleuth_wt(so, "conditionKO")
so <- sleuth_wt(so, "conditionWT")
models(so)
sleuth_live(so)
require(biomaRt)
mouse <- useEnsembl(mart = "ensembl", dataset = "mmusculus_gene_ensembl", host = "http://dec2013.archive.ensembl.org")
mouse <- useEnsembl(biomart = "ensembl", dataset = "mmusculus_gene_ensembl", host = "http://dec2013.archive.ensembl.org")
mouse <- useEnsembl(biomart = "ensembl", dataset = "mmusculus_gene_ensembl", host = "dec2013.archive.ensembl.org")
t2g <- getBM(attributes = c("ensembl_transcript_id", "ensembl_gene_id", "external_gene_name"), mart = mouse)
attribs <- listAttributes(mouse)
head(attribs)
grep("gene", attribs$name)
attribs[grep("gene", attribs$name),]
t2g <- getBM(attributes = c("ensembl_transcript_id", "ensembl_gene_id", "external_gene_id"), mart = mouse)
t2g <- dplyr::rename(t2g, target_id = ensembl_transcript_id, ens_gene = ensembl_gene_id, ext_gene = external_gene_id)
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "conditionWT")
so <- sleuth_wt(so, which_beta = "conditionWT")
sleuth_live(so)
results_table <- sleuth_results(so, "conditionsWT")
results_table <- sleuth_results(so, "conditionWT")
dim(results_table)
head(results_table)
s2c
s2c$condition
levels(s2c$condition)
levels(s2c$condition)[2,1]
levels(s2c$condition)[c(2,1)]
levels(s2c$condition) <- levels(s2c$condition)[c(2,1)]
s2c$condition
so <- sleuth_prep(s2c, ~ condition)
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "conditionKO")
results_table <- sleuth_results(so, "conditionsKO")
results_table <- sleuth_results(so, "conditionKO")
head(results_table)
models(so)
ls()
rm(so)
rm(s2c)
rm(results_table)
base_dir <- "~/Data/Tremethick/TALENs/NB501086_0047_TSoboleva_JCSMR_stranded_RNASeq/processed_data"
sample_id <- dir(base_dir)
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, id))
s2c <- data.frame(sample = sample_id, condition = c("KO", "WT", "WT", "KO", "WT", "KO"))
s2c <- dplyr::mutate(s2c, path = kal_dirs)
levels(s2c$condition) <- levels(s2c$condition)[c(2,1)]
s2c
s2c$condition
head(t2g)
dim(t2g)
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
head(warnings())
H5close()
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
models(so)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "conditionKO")
models(so)
results_table <- sleuth_results(so, "conditionKO")
head(results_table)
kt <- kallisto_table(so)
head(kt)
grep("ENSMUST00000122050", kt$target_id)
kt[grep("ENSMUST00000122050", kt$target_id),]
sample_id <- dir(base_dir)
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, id))
s2c <- data.frame(sample = sample_id, condition = c("KO", "WT", "WT", "KO", "WT", "KO"))
s2c <- dplyr::mutate(s2c, path = kal_dirs)
x <- s2c$condition
x
x <- factor(x, levels(x)c[2,1])
x <- factor(x, levels(x)[c(2,1)])
x
levels(x)
levels(s2c$condition)
s2c$condition <- x
levels(s2c$condition)
(s2c$condition)
s2c
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "conditionKO")
results_table <- sleuth_results(so, "conditionKO")
kt <- kallisto_table(so)
sleuth_live(so)
kt <- kallisto_table(so)
head(kt)
grep("H2A", t2g$ext_gene)
grep("H2", t2g$ext_gene)
t2g[grep("H2", t2g$ext_gene),]
t2g[grep("H2afb3", t2g$ext_gene),]
grep("ENSMUST00000122050", kt$target_id)
kt[grep("ENSMUST00000122050", kt$target_id),]
results_table <- sleuth_results(so, "conditionKO")
head(results_table)
write.csv(results_table, "Differential_Expression_WT_vs_KO.csv")
p.adjust(results_table$pval, method = "FDR")
p.adjust(results_table$pval, method = "fdr")
head(p.adjust(results_table$pval, method = "fdr"))
kt[grep("ENSMUST00000122050", kt$target_id),]
kt.h2afb3 <- kt[grep("ENSMUST00000122050", kt$target_id),]
kt.h2afb3[sort(kt.h2afb3$condition),]
kt.h2afb3
kt.h2afb3[order(kt.h2afb3$condition),]
require(rhdf5)
require(sleuth)
require(biomaRt)
setwd("~/Data/Tremethick/TALENs/NB501086_0047_TSoboleva_JCSMR_stranded_RNASeq/R_analysis")
base_dir <- "~/Data/Tremethick/TALENs/NB501086_0047_TSoboleva_JCSMR_stranded_RNASeq/processed_data"
sample_id <- dir(base_dir)
kal_dirs <- sapply(sample_id, function(id) file.path(base_dir, id))
s2c <- data.frame(sample = sample_id, condition = c("KO", "WT", "WT", "KO", "WT", "KO"))
s2c <- dplyr::mutate(s2c, path = kal_dirs)
x <- s2c$condition
x <- factor(x, levels(x)[c(2,1)])
s2c$condition <- x
s2c
s2c$condition <- x
s2c$condition
mouse <- useEnsembl(biomart = "ensembl", dataset = "mmusculus_gene_ensembl", host = "dec2013.archive.ensembl.org")
t2g <- getBM(attributes = c("ensembl_transcript_id", "ensembl_gene_id", "external_gene_id"), mart = mouse)
t2g <- dplyr::rename(t2g, target_id = ensembl_transcript_id, ens_gene = ensembl_gene_id, ext_gene = external_gene_id)
# re-run sleuth
so <- sleuth_prep(s2c, ~ condition, target_mapping = t2g)
so <- sleuth_fit(so)
so <- sleuth_wt(so, "conditionKO")
results_table <- sleuth_results(so, "conditionKO")
kt <- kallisto_table(so)
dim(kt)
grep("H2afb2", t2g$ext_gene)
t2g[grep("H2afb2", t2g$ext_gene),]
t2g[grep("H2afb2", t2g$ext_gene),]$target_id
kt[t2g[grep("H2afb2", t2g$ext_gene),]$target_id,]
grep(t2g[grep("H2afb2", t2g$ext_gene),]$target_id, kt$target_id)
kt[grep(t2g[grep("H2afb2", t2g$ext_gene),]$target_id, kt$target_id),]
toGrep <- c("H2afb3", "H2afb2", "Gm14920")
collapse(toGrep, "|")
grep(paste(toGrep, collapse = "|"), t2g$ext_gene)
t2g[grep(paste(toGrep, collapse = "|"), t2g$ext_gene),]$target_id
kt[grep(t2g[grep(paste(toGrep, collapse = "|"), t2g$ext_gene),]$target_id), kt$target_id),]
kt[grep(t2g[grep(paste(toGrep, collapse = "|"), t2g$ext_gene),]$target_id, kt$target_id),]
t2g[grep(paste(toGrep, collapse = "|"), t2g$ext_gene),]$target_id
kt[grep(collapse(toGrep, "|"), kt$target_id),]
kt[grep(paste(toGrep, collapse = "|"), kt$target_id),]
grep(paste(toGrep, collapse = "|"), kt$target_id)
toGrep
toGrep <- t2g[grep(paste(toGrep, collapse = "|"), t2g$ext_gene),]$target_id
kt[grep(paste(toGrep, collapse = "|"), kt$target_id),]
kt.goi <- kt[grep(paste(toGrep, collapse = "|"), kt$target_id),]
kt.goi
head(t2g)
which(t2g$target_id %in% kt.goi$target_id)
t2g[which(t2g$target_id %in% kt.goi$target_id),]
write.csv(kt.goi, "KO_Gene_expression_levels.csv")
head(log2(exp(results_table$b)))
head(log(exp(results_table$b)))
results_table$log2_FC_estimated <- log2(exp(results_table$b))
head(results_table)
results_table
results_table <- sleuth_results(so, "conditionKO")
results_table$FC_estimated <- log2(exp(results_table$b))
write.csv(results_table, "Differential_Expression_WT_vs_KO.csv")
t(kt.goi)
require(reshape2)
melt(kt.goi, id = c("sample", "target_id"))
melt(kt.goi[,c("sample", "target_id", "tpm")], id = c("sample", "target_id"))
kt.goi
??reshape
kt.goi$sample <- factor(kt.goi$sample)
kt.goi
kt.goi$sample
require(tidyr)
gather(kt.goi, sample, tpm, conditionCall())
gather(kt.goi, sample, tpm, condition)
gather(kt.goi, sample, tpm)
spread(kt.goi, sample, tpm)
spread(kt.goi, sample)
spread(kt.goi, sample, condition)
spread(kt.goi, target_id, tpm)
spread(kt.goi, sample, tpm)
spread(kt.goi[, c("target_id", "sample", "tpm")], sample, tpm)
kt.goi <- spread(kt.goi[, c("target_id", "sample", "tpm")], sample, tpm)
rownames(kt.goi) <- kt.goi$target_id
t2g[which(t2g$target_id %in% kt.goi$target_id),]
kt.goi$gene <- t2g[which(t2g$target_id %in% kt.goi$target_id),]$ext_gene
kt.goi
write.csv(kt.goi, "KO_Gene_expression_levels.csv")
sleuth_live(so)
rownames(t2g) <- t2g$target_id
kt.goi$gene <- t2g[rownames(kt.goi),]$ext_gene
kt.goi
kt.goi <- kt.goi[, c("NMG3-62wt_S2", "NMG3-74wt_S3", "NMG3-76wt_S5", "NMG3-60hemi_S1", "NMG3-75hemi_S4", "NMG3-77hemi_S6", "gene")]
kt.goi
write.csv(kt.goi, "KO_Gene_expression_levels.csv")
summary(kt$tpm)
